# Order represents an order placed by a user.
type Order {
  id: ID!
  products: [String!]!
  orderDate: Time!
  shippingAddress: String
  status: String
  customerEmail: String!
  paymentStatus: String
}

# User represents a user of the system.
type User {
  id: ID!
  name: String
  email: String!
  phone: String
  orders: [Order]
}

# Time represents a specific point in time.
scalar Time

type Query {
  # Get an order by its ID.
  getOrder(id: ID!): Order
  # Get a user by their ID.
  getUser(id: ID!): User
}

type Mutation {
  # Create a new order.
  createOrder(input: CreateOrderInput!): Order!
  # Create a new user.
  createUser(input: CreateUserInput!): User!
}

input CreateOrderInput {
  products: [String!]!
  orderDate: Time!
  shippingAddress: String
  status: String
  customerEmail: String!
  paymentStatus: String
}

input CreateUserInput {
  name: String
  email: String!
  phone: String
}

