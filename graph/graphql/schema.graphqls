scalar Time
scalar Id
scalar Any

scalar Upload

enum Category {
  Electronics
  Fashion
  Home
  Sports
  Books
  Automotive
  Other
}

enum Currency {
  UAH
  USD
  EUR
}

type User {
  id: Id!
  name: String
  email: String!
  emailIsActive: Boolean
  phone: String
  password: String!
  image: String
  orders: [Order]
}

type Order {
  id: Id!
  title: String!
  description: String
  images: [String!]
  category: [Category!]!
  date: Time!
  shippingAddress: String
  status: Int!
  customerEmail: String
  price: Float!
  currency: Currency!
}

input CreateUserInput {
  name: String
  email: String
  password: String
}

input LoginUserInput {
  email: String
  password: String
}

input CreateOrderInput {
  title: String
  description: String
  category: [Category]
  images: [Upload]
  price: Float
  currency: Currency
}

type Query {
  users: [User!]!
  user(email: String!): User!

  orders: [Order!]!
  order(id: String!): Order!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  deleteUser(email: String!): User!
  loginUser(input: LoginUserInput!): Any!

  createOrder(input: CreateOrderInput): Order!
  archiveOrder(id: String): Order!
}
