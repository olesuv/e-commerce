scalar Time
scalar Id

type User {
  id: Id!
  name: String
  email: String!
  emailIsActive: Boolean
  phone: String
  password: String!
  image: String
  orders: [Order]
}

type Order {
  id: String!
  products: [String!]!
  orderDate: Time!
  shippingAddress: String
  status: String
  customerEmail: String!
  paymentStatus: String
}

type Product {
  id: String!
  title: String!
  description: String!
  amount: Int!
  price: Float!
  images: [String!]!
  category: String!
}

input CreateUserInput {
  name: String
  email: String
  password: String
}

input CreateOrderInput {
  products: [String!]!
  orderDate: Time!
  shippingAddress: String
  status: String
  customerEmail: String!
  paymentStatus: String
}

input CreateProductInput {
  title: String!
  description: String!
  amount: Int!
  price: Float!
  images: [String!]!
  category: String!
}

type Query {
  users: [User!]!
  user(email: String!): User!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  deleteUser(email: String!): User!
  verifyUser(email: String!): User!
}
